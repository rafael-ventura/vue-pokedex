{"remainingRequest":"/home/rafa/dev/vue-pokedex/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rafa/dev/vue-pokedex/src/components/Pokemon.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/rafa/dev/vue-pokedex/src/components/Pokemon.vue","mtime":1609033705003},{"path":"/home/rafa/dev/vue-pokedex/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rafa/dev/vue-pokedex/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/rafa/dev/vue-pokedex/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/rafa/dev/vue-pokedex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rafa/dev/vue-pokedex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1QcmVzcytTdGFydCsyUCZkaXNwbGF5PXN3YXAnKTsKYm9keSB7CiAgZm9udC1mYW1pbHk6ICdQcmVzcyBTdGFydCAyUCcsIGN1cnNpdmU7CiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzMzMzsKfQoudGl0bGUgewogIGNvbG9yOiAjZWY1MzUwOwp9Ci5jYXJkIHsKICBwYWRkaW5nOiAyJTsKICBoZWlnaHQ6IGF1dG87CiAgYmFja2dyb3VuZC1jb2xvcjogI2VmNTM1MDZiOwp9Ci5jYXJkIC5jYXJkLWNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgZm9udC1zaXplOiAxMXB4OwogIGRpc3BsYXk6IGlubGluZTsKfQouY2FyZC1pbWFnZSB7CiAgaGVpZ2h0OiA2MCU7CiAgd2lkdGg6IDYwJTsKICBtYXJnaW46IGF1dG87Cn0KLmxpbmtEZXRhaWxzIHsKICBmb250LXNpemU6IDEwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgphIHsKICBmb250LXNpemU6IDlweDsKICBtYXJnaW46IGF1dG87CiAgY29sb3I6ICNlZjUzNTA7CiAgZGlzcGxheTogaW5saW5lOwp9Cg=="},{"version":3,"sources":["Pokemon.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Pokemon.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"app\">\n      <div class=\"row\">\n        <div v-for=\"pokemon in pokemons\" :key=\"pokemon.id\" class=\"col s1 m2\">\n          <div class=\"card\">\n            <div class=\"card-image\">\n              <img class=\"pokeSprites\" :src=\"pokemon.sprites.front_default\" />\n            </div>\n            <div class=\"card-content black-text\">\n              <p>{{ `#${pokemon.id}. ${pokemon.name}` }}</p>\n            </div>\n            <div class=\"card-action linkDetails\">\n              <a href=\"#\"> View Poke Details </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios/dist/axios';\nimport M from 'materialize-css';\n\nexport default {\n  name: 'Pokemon',\n  data() {\n    return {\n      pokemons: [],\n      url: 'https://pokeapi.co/api/v2/pokemon?limit=151',\n    };\n  },\n  mounted() {\n    M.AutoInit();\n  },\n  methods: {\n    getAllPoke: async function() {\n      await axios\n        .get(this.url)\n        .then((response) => {\n          return response.data.results;\n        })\n        .then((results) => {\n          return Promise.all(results.map((res) => axios.get(res.url)));\n        })\n        .then((results) => {\n          this.pokemons = results.map((res) => res.data);\n          this.pokemons;\n        })\n        .catch(() => {});\n    },\n  },\n  computed: {},\n  created() {\n    this.getAllPoke();\n  },\n};\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');\nbody {\n  font-family: 'Press Start 2P', cursive;\n  background-color: #333333;\n}\n.title {\n  color: #ef5350;\n}\n.card {\n  padding: 2%;\n  height: auto;\n  background-color: #ef53506b;\n}\n.card .card-content {\n  text-align: left;\n  font-size: 11px;\n  display: inline;\n}\n.card-image {\n  height: 60%;\n  width: 60%;\n  margin: auto;\n}\n.linkDetails {\n  font-size: 10px;\n  text-align: center;\n}\n\na {\n  font-size: 9px;\n  margin: auto;\n  color: #ef5350;\n  display: inline;\n}\n</style>\n"]}]}